{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-root\\\\frontend\\\\src\\\\context\\\\AIContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useCallback } from 'react';\n\n/**\r\n * AIContext\r\n * \r\n * Этот модуль создает контекст для управления взаимодействием с ИИ в приложении.\r\n * \r\n * Взаимодействует с:\r\n * - React hooks (useState, useContext, useCallback)\r\n * - API сервисом для взаимодействия с ИИ (предполагается, что он реализован в отдельном модуле)\r\n * \r\n * Отвечает за:\r\n * - Предоставление функций для обработки новостей с помощью ИИ\r\n * - Хранение результатов обработки ИИ\r\n * - Управление состоянием взаимодействия с ИИ (загрузка, ошибки)\r\n * - Обеспечение доступа к функциям ИИ по всему приложению\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIContext = /*#__PURE__*/createContext();\nexport const useAI = () => {\n  _s();\n  return useContext(AIContext);\n};\n_s(useAI, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AIProvider = ({\n  children\n}) => {\n  _s2();\n  const [aiResult, setAIResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const processNews = useCallback(async newsContent => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Здесь должен быть вызов API для обработки новости с помощью ИИ\n      // const response = await api.processNewsWithAI(newsContent);\n      // setAIResult(response.data);\n      setAIResult(\"Это результат обработки новости с помощью ИИ\"); // Заглушка, замените на реальные данные\n    } catch (err) {\n      setError('Ошибка при обработке новости с помощью ИИ');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const generateImage = useCallback(async prompt => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Здесь должен быть вызов API для генерации изображения\n      // const response = await api.generateImageWithAI(prompt);\n      // return response.data.imageUrl;\n      return \"https://example.com/generated-image.jpg\"; // Заглушка, замените на реальные данные\n    } catch (err) {\n      setError('Ошибка при генерации изображения');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const value = {\n    aiResult,\n    loading,\n    error,\n    processNews,\n    generateImage\n  };\n  return /*#__PURE__*/_jsxDEV(AIContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n};\n_s2(AIProvider, \"YVDYajcaNFQnfBOjcQnlV8xC5Ao=\");\n_c = AIProvider;\nexport default AIContext;\nvar _c;\n$RefreshReg$(_c, \"AIProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","jsxDEV","_jsxDEV","AIContext","useAI","_s","AIProvider","children","_s2","aiResult","setAIResult","loading","setLoading","error","setError","processNews","newsContent","err","console","generateImage","prompt","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/project-root/frontend/src/context/AIContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback } from 'react';\r\n\r\n/**\r\n * AIContext\r\n * \r\n * Этот модуль создает контекст для управления взаимодействием с ИИ в приложении.\r\n * \r\n * Взаимодействует с:\r\n * - React hooks (useState, useContext, useCallback)\r\n * - API сервисом для взаимодействия с ИИ (предполагается, что он реализован в отдельном модуле)\r\n * \r\n * Отвечает за:\r\n * - Предоставление функций для обработки новостей с помощью ИИ\r\n * - Хранение результатов обработки ИИ\r\n * - Управление состоянием взаимодействия с ИИ (загрузка, ошибки)\r\n * - Обеспечение доступа к функциям ИИ по всему приложению\r\n */\r\n\r\nconst AIContext = createContext();\r\n\r\nexport const useAI = () => useContext(AIContext);\r\n\r\nexport const AIProvider = ({ children }) => {\r\n  const [aiResult, setAIResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const processNews = useCallback(async (newsContent) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Здесь должен быть вызов API для обработки новости с помощью ИИ\r\n      // const response = await api.processNewsWithAI(newsContent);\r\n      // setAIResult(response.data);\r\n      setAIResult(\"Это результат обработки новости с помощью ИИ\"); // Заглушка, замените на реальные данные\r\n    } catch (err) {\r\n      setError('Ошибка при обработке новости с помощью ИИ');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const generateImage = useCallback(async (prompt) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Здесь должен быть вызов API для генерации изображения\r\n      // const response = await api.generateImageWithAI(prompt);\r\n      // return response.data.imageUrl;\r\n      return \"https://example.com/generated-image.jpg\"; // Заглушка, замените на реальные данные\r\n    } catch (err) {\r\n      setError('Ошибка при генерации изображения');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const value = {\r\n    aiResult,\r\n    loading,\r\n    error,\r\n    processNews,\r\n    generateImage\r\n  };\r\n\r\n  return <AIContext.Provider value={value}>{children}</AIContext.Provider>;\r\n};\r\n\r\nexport default AIContext;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,QAAQ,OAAO;;AAE/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA,SAAAC,MAAA,IAAAC,OAAA;AAgBA,MAAMC,SAAS,gBAAGN,aAAa,CAAC,CAAC;AAEjC,OAAO,MAAMO,KAAK,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,SAAS,CAAC;AAAA;AAACE,EAAA,CAApCD,KAAK;AAElB,OAAO,MAAME,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMiB,WAAW,GAAGf,WAAW,CAAC,MAAOgB,WAAW,IAAK;IACrDJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF;MACA;MACA;MACAJ,WAAW,CAAC,8CAA8C,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZH,QAAQ,CAAC,2CAA2C,CAAC;MACrDI,OAAO,CAACL,KAAK,CAACI,GAAG,CAAC;IACpB,CAAC,SAAS;MACRL,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,aAAa,GAAGnB,WAAW,CAAC,MAAOoB,MAAM,IAAK;IAClDR,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF;MACA;MACA;MACA,OAAO,yCAAyC,CAAC,CAAC;IACpD,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZH,QAAQ,CAAC,kCAAkC,CAAC;MAC5CI,OAAO,CAACL,KAAK,CAACI,GAAG,CAAC;IACpB,CAAC,SAAS;MACRL,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,KAAK,GAAG;IACZZ,QAAQ;IACRE,OAAO;IACPE,KAAK;IACLE,WAAW;IACXI;EACF,CAAC;EAED,oBAAOjB,OAAA,CAACC,SAAS,CAACmB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAd,QAAA,EAAEA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAqB,CAAC;AAC1E,CAAC;AAAClB,GAAA,CA9CWF,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AAgDvB,eAAeH,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}