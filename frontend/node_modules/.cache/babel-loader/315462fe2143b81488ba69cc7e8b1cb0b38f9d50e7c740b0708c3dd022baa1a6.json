{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport api from '../services/api';\n\n/**\r\n * Хук useNews\r\n * \r\n * Предоставляет функциональность для работы с новостями.\r\n * \r\n * Взаимодействует с:\r\n * - api.js для выполнения запросов к бэкенду\r\n * - Компонентами, которые отображают или обрабатывают новости (например, NewsList, NewsDetail)\r\n * \r\n * Возвращает:\r\n * - news: массив новостей\r\n * - loading: состояние загрузки\r\n * - error: сообщение об ошибке\r\n * - fetchNews: функция для получения списка новостей\r\n * - getNewsDetails: функция для получения деталей конкретной новости\r\n */\nexport const useNews = () => {\n  _s();\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchNews = useCallback(async source => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.getNews(source);\n      setNews(response.data);\n    } catch (err) {\n      setError('Ошибка при загрузке новостей');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const getNewsDetails = useCallback(async id => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.getNewsDetails(id);\n      return response.data;\n    } catch (err) {\n      setError('Ошибка при загрузке деталей новости');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  return {\n    news,\n    loading,\n    error,\n    fetchNews,\n    getNewsDetails\n  };\n};\n_s(useNews, \"3oofheCxvIUMNHFPgTe7ucSw69g=\");","map":{"version":3,"names":["useState","useCallback","api","useNews","_s","news","setNews","loading","setLoading","error","setError","fetchNews","source","response","getNews","data","err","console","getNewsDetails","id"],"sources":["D:/project-root/frontend/src/hooks/useNews.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\nimport api from '../services/api';\r\n\r\n/**\r\n * Хук useNews\r\n * \r\n * Предоставляет функциональность для работы с новостями.\r\n * \r\n * Взаимодействует с:\r\n * - api.js для выполнения запросов к бэкенду\r\n * - Компонентами, которые отображают или обрабатывают новости (например, NewsList, NewsDetail)\r\n * \r\n * Возвращает:\r\n * - news: массив новостей\r\n * - loading: состояние загрузки\r\n * - error: сообщение об ошибке\r\n * - fetchNews: функция для получения списка новостей\r\n * - getNewsDetails: функция для получения деталей конкретной новости\r\n */\r\nexport const useNews = () => {\r\n  const [news, setNews] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchNews = useCallback(async (source) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.getNews(source);\r\n      setNews(response.data);\r\n    } catch (err) {\r\n      setError('Ошибка при загрузке новостей');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const getNewsDetails = useCallback(async (id) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.getNewsDetails(id);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError('Ошибка при загрузке деталей новости');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  return { news, loading, error, fetchNews, getNewsDetails };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,OAAOC,GAAG,MAAM,iBAAiB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,SAAS,GAAGV,WAAW,CAAC,MAAOW,MAAM,IAAK;IAC9CJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMX,GAAG,CAACY,OAAO,CAACF,MAAM,CAAC;MAC1CN,OAAO,CAACO,QAAQ,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZN,QAAQ,CAAC,8BAA8B,CAAC;MACxCO,OAAO,CAACR,KAAK,CAACO,GAAG,CAAC;IACpB,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,cAAc,GAAGjB,WAAW,CAAC,MAAOkB,EAAE,IAAK;IAC/CX,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMX,GAAG,CAACgB,cAAc,CAACC,EAAE,CAAC;MAC7C,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZN,QAAQ,CAAC,qCAAqC,CAAC;MAC/CO,OAAO,CAACR,KAAK,CAACO,GAAG,CAAC;IACpB,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEH,IAAI;IAAEE,OAAO;IAAEE,KAAK;IAAEE,SAAS;IAAEO;EAAe,CAAC;AAC5D,CAAC;AAACd,EAAA,CAlCWD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}