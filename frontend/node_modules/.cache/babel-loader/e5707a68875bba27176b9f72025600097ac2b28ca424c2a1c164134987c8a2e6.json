{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useCallback } from 'react';\nimport NewsContext from '../context/NewsContext';\nimport api from '../services/api';\n\n/**\r\n * Хук useNews\r\n * \r\n * Этот хук предоставляет функциональность для работы с новостями.\r\n * \r\n * Взаимодействует с:\r\n * - NewsContext для доступа к глобальному состоянию новостей\r\n * - api сервисом для выполнения запросов к бэкенду\r\n * \r\n * Отвечает за:\r\n * - Получение списка новостей\r\n * - Получение деталей конкретной новости\r\n * - Обновление новостей\r\n * - Фильтрацию новостей\r\n */\nconst useNews = () => {\n  _s();\n  const {\n    news,\n    setNews,\n    loading,\n    setLoading,\n    error,\n    setError\n  } = useContext(NewsContext);\n  const fetchNews = useCallback(async source => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.getNews(source);\n      setNews(response.data);\n    } catch (err) {\n      setError('Ошибка при загрузке новостей');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [setNews, setLoading, setError]);\n  const getNewsDetails = useCallback(async id => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.getNewsDetails(id);\n      return response.data;\n    } catch (err) {\n      setError('Ошибка при загрузке деталей новости');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [setLoading, setError]);\n  const updateNews = useCallback(async updatedNews => {\n    try {\n      await api.updateNews(updatedNews);\n      setNews(prevNews => prevNews.map(news => news.id === updatedNews.id ? updatedNews : news));\n    } catch (err) {\n      setError('Ошибка при обновлении новости');\n      console.error(err);\n    }\n  }, [setNews, setError]);\n  const filterNews = useCallback(criteria => {\n    return news.filter(item => {\n      // Пример фильтрации, может быть расширен в зависимости от требований\n      return item.title.toLowerCase().includes(criteria.toLowerCase()) || item.content.toLowerCase().includes(criteria.toLowerCase());\n    });\n  }, [news]);\n  return {\n    news,\n    loading,\n    error,\n    fetchNews,\n    getNewsDetails,\n    updateNews,\n    filterNews\n  };\n};\n_s(useNews, \"P3SxOgGIPZnnCXrCpwYBmHEuAYg=\");\nexport default useNews;","map":{"version":3,"names":["useContext","useCallback","NewsContext","api","useNews","_s","news","setNews","loading","setLoading","error","setError","fetchNews","source","response","getNews","data","err","console","getNewsDetails","id","updateNews","updatedNews","prevNews","map","filterNews","criteria","filter","item","title","toLowerCase","includes","content"],"sources":["D:/project-root/frontend/src/hooks/useNews.js"],"sourcesContent":["import { useContext, useCallback } from 'react';\r\nimport NewsContext from '../context/NewsContext';\r\nimport api from '../services/api';\r\n\r\n/**\r\n * Хук useNews\r\n * \r\n * Этот хук предоставляет функциональность для работы с новостями.\r\n * \r\n * Взаимодействует с:\r\n * - NewsContext для доступа к глобальному состоянию новостей\r\n * - api сервисом для выполнения запросов к бэкенду\r\n * \r\n * Отвечает за:\r\n * - Получение списка новостей\r\n * - Получение деталей конкретной новости\r\n * - Обновление новостей\r\n * - Фильтрацию новостей\r\n */\r\nconst useNews = () => {\r\n  const { news, setNews, loading, setLoading, error, setError } = useContext(NewsContext);\r\n\r\n  const fetchNews = useCallback(async (source) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.getNews(source);\r\n      setNews(response.data);\r\n    } catch (err) {\r\n      setError('Ошибка при загрузке новостей');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [setNews, setLoading, setError]);\r\n\r\n  const getNewsDetails = useCallback(async (id) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.getNewsDetails(id);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError('Ошибка при загрузке деталей новости');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [setLoading, setError]);\r\n\r\n  const updateNews = useCallback(async (updatedNews) => {\r\n    try {\r\n      await api.updateNews(updatedNews);\r\n      setNews(prevNews => prevNews.map(news => \r\n        news.id === updatedNews.id ? updatedNews : news\r\n      ));\r\n    } catch (err) {\r\n      setError('Ошибка при обновлении новости');\r\n      console.error(err);\r\n    }\r\n  }, [setNews, setError]);\r\n\r\n  const filterNews = useCallback((criteria) => {\r\n    return news.filter(item => {\r\n      // Пример фильтрации, может быть расширен в зависимости от требований\r\n      return item.title.toLowerCase().includes(criteria.toLowerCase()) ||\r\n             item.content.toLowerCase().includes(criteria.toLowerCase());\r\n    });\r\n  }, [news]);\r\n\r\n  return { news, loading, error, fetchNews, getNewsDetails, updateNews, filterNews };\r\n};\r\n\r\nexport default useNews;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}