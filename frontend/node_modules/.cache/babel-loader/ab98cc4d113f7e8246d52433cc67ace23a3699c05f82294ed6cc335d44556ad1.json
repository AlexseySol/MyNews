{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-root\\\\frontend\\\\src\\\\pages\\\\NewsProcessing.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport useNews from '../hooks/useNews';\nimport '../styles/pages/NewsProcessing.css';\n\n/**\r\n * Компонент NewsProcessing\r\n * \r\n * Этот компонент отвечает за отображение списка новостей из выбранного источника.\r\n * \r\n * Функциональность:\r\n * - Загружает новости из выбранного источника\r\n * - Отображает список новостей\r\n * - Предоставляет функцию поиска по новостям\r\n * - Позволяет переходить к детальному просмотру новости\r\n * \r\n * Взаимодействует с:\r\n * - React Router для получения параметров URL и навигации\r\n * - Хуком useNews для получения данных о новостях\r\n * - Стилями из '../styles/pages/NewsProcessing.css'\r\n * \r\n * @returns {JSX.Element} Разметка компонента NewsProcessing\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsProcessing = () => {\n  _s();\n  const {\n    source\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    getNews,\n    loading,\n    error\n  } = useNews();\n  const [news, setNews] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Загрузка новостей при монтировании компонента или изменении источника\n  useEffect(() => {\n    const fetchNews = async () => {\n      const fetchedNews = await getNews(source);\n      setNews(fetchedNews);\n    };\n    fetchNews();\n  }, [source, getNews]);\n\n  // Фильтрация новостей на основе поискового запроса\n  const filteredNews = news.filter(item => item.title.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  /**\r\n   * Обработчик клика по новости\r\n   * @param {string} newsId - ID выбранной новости\r\n   */\n  const handleNewsClick = newsId => {\n    navigate(`/news/${source}/${newsId}`);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-processing__loading\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0435\\u0439...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-processing__error\",\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-processing\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"news-processing__title\",\n      children: [\"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438 \\u0438\\u0437 \", source]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0435\\u0439...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      className: \"news-processing__search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-processing__list\",\n      children: filteredNews.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-processing__item\",\n        onClick: () => handleNewsClick(item.id),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"news-processing__item-title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"news-processing__item-description\",\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsProcessing, \"2Cy9xsFWLnZxC8E7xFsWJH18LO8=\", false, function () {\n  return [useParams, useNavigate, useNews];\n});\n_c = NewsProcessing;\nexport default NewsProcessing;\nvar _c;\n$RefreshReg$(_c, \"NewsProcessing\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useNews","jsxDEV","_jsxDEV","NewsProcessing","_s","source","navigate","getNews","loading","error","news","setNews","searchTerm","setSearchTerm","fetchNews","fetchedNews","filteredNews","filter","item","title","toLowerCase","includes","handleNewsClick","newsId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","onClick","id","description","_c","$RefreshReg$"],"sources":["D:/project-root/frontend/src/pages/NewsProcessing.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport useNews from '../hooks/useNews';\r\nimport '../styles/pages/NewsProcessing.css';\r\n\r\n/**\r\n * Компонент NewsProcessing\r\n * \r\n * Этот компонент отвечает за отображение списка новостей из выбранного источника.\r\n * \r\n * Функциональность:\r\n * - Загружает новости из выбранного источника\r\n * - Отображает список новостей\r\n * - Предоставляет функцию поиска по новостям\r\n * - Позволяет переходить к детальному просмотру новости\r\n * \r\n * Взаимодействует с:\r\n * - React Router для получения параметров URL и навигации\r\n * - Хуком useNews для получения данных о новостях\r\n * - Стилями из '../styles/pages/NewsProcessing.css'\r\n * \r\n * @returns {JSX.Element} Разметка компонента NewsProcessing\r\n */\r\nconst NewsProcessing = () => {\r\n  const { source } = useParams();\r\n  const navigate = useNavigate();\r\n  const { getNews, loading, error } = useNews();\r\n  const [news, setNews] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Загрузка новостей при монтировании компонента или изменении источника\r\n  useEffect(() => {\r\n    const fetchNews = async () => {\r\n      const fetchedNews = await getNews(source);\r\n      setNews(fetchedNews);\r\n    };\r\n    fetchNews();\r\n  }, [source, getNews]);\r\n\r\n  // Фильтрация новостей на основе поискового запроса\r\n  const filteredNews = news.filter(item =>\r\n    item.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  /**\r\n   * Обработчик клика по новости\r\n   * @param {string} newsId - ID выбранной новости\r\n   */\r\n  const handleNewsClick = (newsId) => {\r\n    navigate(`/news/${source}/${newsId}`);\r\n  };\r\n\r\n  if (loading) return <div className=\"news-processing__loading\">Загрузка новостей...</div>;\r\n  if (error) return <div className=\"news-processing__error\">Ошибка: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"news-processing\">\r\n      <h1 className=\"news-processing__title\">Новости из {source}</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Поиск новостей...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        className=\"news-processing__search\"\r\n      />\r\n      <div className=\"news-processing__list\">\r\n        {filteredNews.map((item) => (\r\n          <div \r\n            key={item.id} \r\n            className=\"news-processing__item\"\r\n            onClick={() => handleNewsClick(item.id)}\r\n          >\r\n            <h2 className=\"news-processing__item-title\">{item.title}</h2>\r\n            <p className=\"news-processing__item-description\">{item.description}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsProcessing;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}