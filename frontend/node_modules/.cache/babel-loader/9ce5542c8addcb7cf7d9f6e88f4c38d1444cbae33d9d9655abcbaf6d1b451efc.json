{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-root\\\\frontend\\\\src\\\\pages\\\\NewsProcessing.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useNews } from '../hooks/useNews';\nimport { useAI } from '../hooks/useAI';\nimport AIChat from '../components/AIChat';\nimport ImagePreview from '../components/ImagePreview';\nimport TelegramPreview from '../components/TelegramPreview';\nimport '../styles/pages/NewsProcessing.css';\n\n/**\r\n * Компонент NewsProcessing\r\n * \r\n * Этот компонент отвечает за страницу обработки выбранной новости.\r\n * \r\n * Взаимодействует с:\r\n * - React Router для получения параметров URL\r\n * - Хуками useNews и useAI для работы с новостями и ИИ\r\n * - Компонентами AIChat, ImagePreview и TelegramPreview\r\n * - CSS файлом для стилизации\r\n * \r\n * Отвечает за:\r\n * - Отображение выбранной новости\r\n * - Интеграцию функций обработки новости с помощью ИИ\r\n * - Управление процессом генерации изображения\r\n * - Подготовку и предпросмотр поста для Telegram\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsProcessing = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    newsDetail,\n    loading,\n    error\n  } = useNews(id);\n  const {\n    processNews,\n    generateImage,\n    aiResult,\n    imageUrl\n  } = useAI();\n  const [processedText, setProcessedText] = useState('');\n  useEffect(() => {\n    if (newsDetail) {\n      processNews(newsDetail);\n    }\n  }, [newsDetail, processNews]);\n  useEffect(() => {\n    if (aiResult) {\n      setProcessedText(aiResult);\n    }\n  }, [aiResult]);\n  const handleRegenerateImage = () => {\n    generateImage(processedText);\n  };\n  const handlePublishToTelegram = finalText => {\n    // Здесь будет логика публикации в Telegram\n    console.log('Публикация в Telegram:', finalText);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-processing__loading\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-processing__error\",\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-processing\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"news-processing__title\",\n      children: \"\\u041E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430 \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-processing__original\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041E\\u0440\\u0438\\u0433\\u0438\\u043D\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: newsDetail.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: newsDetail.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-processing__ai-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u0418\\u0418\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: processedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AIChat, {\n      newsId: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImagePreview, {\n      imageUrl: imageUrl,\n      onRegenerate: handleRegenerateImage,\n      onUse: () => {/* Логика использования изображения */}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TelegramPreview, {\n      initialText: processedText,\n      image: imageUrl,\n      onPublish: handlePublishToTelegram\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsProcessing, \"SEEjeXxLDaf9OcOHQcpeQf1oz7s=\", false, function () {\n  return [useParams, useNews, useAI];\n});\n_c = NewsProcessing;\nexport default NewsProcessing;\nvar _c;\n$RefreshReg$(_c, \"NewsProcessing\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNews","useAI","AIChat","ImagePreview","TelegramPreview","jsxDEV","_jsxDEV","NewsProcessing","_s","id","newsDetail","loading","error","processNews","generateImage","aiResult","imageUrl","processedText","setProcessedText","handleRegenerateImage","handlePublishToTelegram","finalText","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","newsId","onRegenerate","onUse","initialText","image","onPublish","_c","$RefreshReg$"],"sources":["D:/project-root/frontend/src/pages/NewsProcessing.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useNews } from '../hooks/useNews';\r\nimport { useAI } from '../hooks/useAI';\r\nimport AIChat from '../components/AIChat';\r\nimport ImagePreview from '../components/ImagePreview';\r\nimport TelegramPreview from '../components/TelegramPreview';\r\nimport '../styles/pages/NewsProcessing.css';\r\n\r\n/**\r\n * Компонент NewsProcessing\r\n * \r\n * Этот компонент отвечает за страницу обработки выбранной новости.\r\n * \r\n * Взаимодействует с:\r\n * - React Router для получения параметров URL\r\n * - Хуками useNews и useAI для работы с новостями и ИИ\r\n * - Компонентами AIChat, ImagePreview и TelegramPreview\r\n * - CSS файлом для стилизации\r\n * \r\n * Отвечает за:\r\n * - Отображение выбранной новости\r\n * - Интеграцию функций обработки новости с помощью ИИ\r\n * - Управление процессом генерации изображения\r\n * - Подготовку и предпросмотр поста для Telegram\r\n */\r\nconst NewsProcessing = () => {\r\n  const { id } = useParams();\r\n  const { newsDetail, loading, error } = useNews(id);\r\n  const { processNews, generateImage, aiResult, imageUrl } = useAI();\r\n  const [processedText, setProcessedText] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (newsDetail) {\r\n      processNews(newsDetail);\r\n    }\r\n  }, [newsDetail, processNews]);\r\n\r\n  useEffect(() => {\r\n    if (aiResult) {\r\n      setProcessedText(aiResult);\r\n    }\r\n  }, [aiResult]);\r\n\r\n  const handleRegenerateImage = () => {\r\n    generateImage(processedText);\r\n  };\r\n\r\n  const handlePublishToTelegram = (finalText) => {\r\n    // Здесь будет логика публикации в Telegram\r\n    console.log('Публикация в Telegram:', finalText);\r\n  };\r\n\r\n  if (loading) return <div className=\"news-processing__loading\">Загрузка новости...</div>;\r\n  if (error) return <div className=\"news-processing__error\">Ошибка: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"news-processing\">\r\n      <h1 className=\"news-processing__title\">Обработка новости</h1>\r\n      <div className=\"news-processing__original\">\r\n        <h2>Оригинальная новость</h2>\r\n        <h3>{newsDetail.title}</h3>\r\n        <p>{newsDetail.content}</p>\r\n      </div>\r\n      <div className=\"news-processing__ai-result\">\r\n        <h2>Результат обработки ИИ</h2>\r\n        <p>{processedText}</p>\r\n      </div>\r\n      <AIChat newsId={id} />\r\n      <ImagePreview \r\n        imageUrl={imageUrl} \r\n        onRegenerate={handleRegenerateImage} \r\n        onUse={() => {/* Логика использования изображения */}}\r\n      />\r\n      <TelegramPreview \r\n        initialText={processedText} \r\n        image={imageUrl}\r\n        onPublish={handlePublishToTelegram}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsProcessing;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}