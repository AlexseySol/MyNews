{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useCallback } from 'react';\nimport AIContext from '../context/AIContext';\nimport api from '../services/api';\n\n/**\r\n * Хук useAI\r\n * \r\n * Этот хук предоставляет функциональность для взаимодействия с ИИ.\r\n * \r\n * Взаимодействует с:\r\n * - AIContext для доступа к глобальному состоянию ИИ\r\n * - api сервисом для выполнения запросов к бэкенду\r\n * \r\n * Отвечает за:\r\n * - Обработку новостей с помощью ИИ\r\n * - Генерацию изображений\r\n * - Анализ настроений в новостях\r\n */\nconst useAI = () => {\n  _s();\n  const {\n    aiResult,\n    setAIResult,\n    loading,\n    setLoading,\n    error,\n    setError\n  } = useContext(AIContext);\n  const processNewsWithAI = useCallback(async newsContent => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.processNewsWithAI(newsContent);\n      setAIResult(response.data);\n      return response.data;\n    } catch (err) {\n      setError('Ошибка при обработке новости с помощью ИИ');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [setAIResult, setLoading, setError]);\n  const generateImage = useCallback(async prompt => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.generateImageWithAI(prompt);\n      return response.data.imageUrl;\n    } catch (err) {\n      setError('Ошибка при генерации изображения');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [setLoading, setError]);\n  const analyzeSentiment = useCallback(async text => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.analyzeSentimentWithAI(text);\n      return response.data.sentiment;\n    } catch (err) {\n      setError('Ошибка при анализе настроений');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [setLoading, setError]);\n  return {\n    aiResult,\n    loading,\n    error,\n    processNewsWithAI,\n    generateImage,\n    analyzeSentiment\n  };\n};\n_s(useAI, \"uVr55H1njbnS5fLwH9iNvQcRiNM=\");\nexport default useAI;","map":{"version":3,"names":["useContext","useCallback","AIContext","api","useAI","_s","aiResult","setAIResult","loading","setLoading","error","setError","processNewsWithAI","newsContent","response","data","err","console","generateImage","prompt","generateImageWithAI","imageUrl","analyzeSentiment","text","analyzeSentimentWithAI","sentiment"],"sources":["D:/project-root/frontend/src/hooks/useAI.js"],"sourcesContent":["import { useContext, useCallback } from 'react';\r\nimport AIContext from '../context/AIContext';\r\nimport api from '../services/api';\r\n\r\n/**\r\n * Хук useAI\r\n * \r\n * Этот хук предоставляет функциональность для взаимодействия с ИИ.\r\n * \r\n * Взаимодействует с:\r\n * - AIContext для доступа к глобальному состоянию ИИ\r\n * - api сервисом для выполнения запросов к бэкенду\r\n * \r\n * Отвечает за:\r\n * - Обработку новостей с помощью ИИ\r\n * - Генерацию изображений\r\n * - Анализ настроений в новостях\r\n */\r\nconst useAI = () => {\r\n  const { aiResult, setAIResult, loading, setLoading, error, setError } = useContext(AIContext);\r\n\r\n  const processNewsWithAI = useCallback(async (newsContent) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.processNewsWithAI(newsContent);\r\n      setAIResult(response.data);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError('Ошибка при обработке новости с помощью ИИ');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [setAIResult, setLoading, setError]);\r\n\r\n  const generateImage = useCallback(async (prompt) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.generateImageWithAI(prompt);\r\n      return response.data.imageUrl;\r\n    } catch (err) {\r\n      setError('Ошибка при генерации изображения');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [setLoading, setError]);\r\n\r\n  const analyzeSentiment = useCallback(async (text) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.analyzeSentimentWithAI(text);\r\n      return response.data.sentiment;\r\n    } catch (err) {\r\n      setError('Ошибка при анализе настроений');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [setLoading, setError]);\r\n\r\n  return { aiResult, loading, error, processNewsWithAI, generateImage, analyzeSentiment };\r\n};\r\n\r\nexport default useAI;"],"mappings":";AAAA,SAASA,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAC/C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,GAAG,MAAM,iBAAiB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,OAAO;IAAEC,UAAU;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGX,UAAU,CAACE,SAAS,CAAC;EAE7F,MAAMU,iBAAiB,GAAGX,WAAW,CAAC,MAAOY,WAAW,IAAK;IAC3DJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMX,GAAG,CAACS,iBAAiB,CAACC,WAAW,CAAC;MACzDN,WAAW,CAACO,QAAQ,CAACC,IAAI,CAAC;MAC1B,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZL,QAAQ,CAAC,2CAA2C,CAAC;MACrDM,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC;IACpB,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACF,WAAW,EAAEE,UAAU,EAAEE,QAAQ,CAAC,CAAC;EAEvC,MAAMO,aAAa,GAAGjB,WAAW,CAAC,MAAOkB,MAAM,IAAK;IAClDV,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMX,GAAG,CAACiB,mBAAmB,CAACD,MAAM,CAAC;MACtD,OAAOL,QAAQ,CAACC,IAAI,CAACM,QAAQ;IAC/B,CAAC,CAAC,OAAOL,GAAG,EAAE;MACZL,QAAQ,CAAC,kCAAkC,CAAC;MAC5CM,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC;IACpB,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACA,UAAU,EAAEE,QAAQ,CAAC,CAAC;EAE1B,MAAMW,gBAAgB,GAAGrB,WAAW,CAAC,MAAOsB,IAAI,IAAK;IACnDd,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMX,GAAG,CAACqB,sBAAsB,CAACD,IAAI,CAAC;MACvD,OAAOT,QAAQ,CAACC,IAAI,CAACU,SAAS;IAChC,CAAC,CAAC,OAAOT,GAAG,EAAE;MACZL,QAAQ,CAAC,+BAA+B,CAAC;MACzCM,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC;IACpB,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACA,UAAU,EAAEE,QAAQ,CAAC,CAAC;EAE1B,OAAO;IAAEL,QAAQ;IAAEE,OAAO;IAAEE,KAAK;IAAEE,iBAAiB;IAAEM,aAAa;IAAEI;EAAiB,CAAC;AACzF,CAAC;AAACjB,EAAA,CA/CID,KAAK;AAiDX,eAAeA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}