{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-root\\\\frontend\\\\src\\\\pages\\\\NewsProcessing.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useNews from '../hooks/useNews';\nimport useAI from '../hooks/useAI';\nimport AIChat from '../components/AIChat';\nimport ImagePreview from '../components/ImagePreview';\nimport TelegramPreview from '../components/TelegramPreview';\nimport '../styles/pages/NewsProcessing.css';\n\n/**\r\n * Компонент NewsProcessing\r\n * \r\n * Отвечает за страницу обработки выбранной новости.\r\n * \r\n * @returns {JSX.Element} Компонент страницы обработки новости\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewsProcessing = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    getNewsDetails,\n    loading: newsLoading,\n    error: newsError\n  } = useNews();\n  const {\n    processNews,\n    generateImage,\n    loading: aiLoading,\n    error: aiError\n  } = useAI();\n  const [newsDetail, setNewsDetail] = useState(null);\n  const [processedText, setProcessedText] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  useEffect(() => {\n    const fetchNewsDetails = async () => {\n      const details = await getNewsDetails(id);\n      setNewsDetail(details);\n    };\n    fetchNewsDetails();\n  }, [id, getNewsDetails]);\n  useEffect(() => {\n    if (newsDetail) {\n      processNews(newsDetail.content).then(setProcessedText);\n    }\n  }, [newsDetail, processNews]);\n\n  /**\r\n   * Обрабатывает генерацию нового изображения\r\n   */\n  const handleRegenerateImage = async () => {\n    const newImageUrl = await generateImage(processedText);\n    setImageUrl(newImageUrl);\n  };\n\n  /**\r\n   * Обрабатывает публикацию в Telegram\r\n   * @param {string} finalText - Финальный текст для публикации\r\n   */\n  const handlePublishToTelegram = finalText => {\n    // Здесь будет логика публикации в Telegram\n    console.log('Публикация в Telegram:', finalText);\n  };\n  if (newsLoading || aiLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-processing__loading\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 40\n  }, this);\n  if (newsError || aiError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-processing__error\",\n    children: \"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 36\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-processing\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"news-processing__title\",\n      children: \"\\u041E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0430 \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), newsDetail && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-processing__original\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041E\\u0440\\u0438\\u0433\\u0438\\u043D\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: newsDetail.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: newsDetail.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-processing__ai-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u0418\\u0418\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: processedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AIChat, {\n        newsId: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImagePreview, {\n        imageUrl: imageUrl,\n        onRegenerate: handleRegenerateImage,\n        onUse: () => {/* Логика использования изображения */}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TelegramPreview, {\n        initialText: processedText,\n        image: imageUrl,\n        onPublish: handlePublishToTelegram\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsProcessing, \"h5QCUHfoZzdC691kFeg7eBMnbUk=\", false, function () {\n  return [useParams, useNews, useAI];\n});\n_c = NewsProcessing;\nexport default NewsProcessing;\nvar _c;\n$RefreshReg$(_c, \"NewsProcessing\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNews","useAI","AIChat","ImagePreview","TelegramPreview","jsxDEV","_jsxDEV","Fragment","_Fragment","NewsProcessing","_s","id","getNewsDetails","loading","newsLoading","error","newsError","processNews","generateImage","aiLoading","aiError","newsDetail","setNewsDetail","processedText","setProcessedText","imageUrl","setImageUrl","fetchNewsDetails","details","content","then","handleRegenerateImage","newImageUrl","handlePublishToTelegram","finalText","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","newsId","onRegenerate","onUse","initialText","image","onPublish","_c","$RefreshReg$"],"sources":["D:/project-root/frontend/src/pages/NewsProcessing.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport useNews from '../hooks/useNews';\r\nimport useAI from '../hooks/useAI';\r\nimport AIChat from '../components/AIChat';\r\nimport ImagePreview from '../components/ImagePreview';\r\nimport TelegramPreview from '../components/TelegramPreview';\r\nimport '../styles/pages/NewsProcessing.css';\r\n\r\n/**\r\n * Компонент NewsProcessing\r\n * \r\n * Отвечает за страницу обработки выбранной новости.\r\n * \r\n * @returns {JSX.Element} Компонент страницы обработки новости\r\n */\r\nconst NewsProcessing = () => {\r\n  const { id } = useParams();\r\n  const { getNewsDetails, loading: newsLoading, error: newsError } = useNews();\r\n  const { processNews, generateImage, loading: aiLoading, error: aiError } = useAI();\r\n  const [newsDetail, setNewsDetail] = useState(null);\r\n  const [processedText, setProcessedText] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchNewsDetails = async () => {\r\n      const details = await getNewsDetails(id);\r\n      setNewsDetail(details);\r\n    };\r\n    fetchNewsDetails();\r\n  }, [id, getNewsDetails]);\r\n\r\n  useEffect(() => {\r\n    if (newsDetail) {\r\n      processNews(newsDetail.content).then(setProcessedText);\r\n    }\r\n  }, [newsDetail, processNews]);\r\n\r\n  /**\r\n   * Обрабатывает генерацию нового изображения\r\n   */\r\n  const handleRegenerateImage = async () => {\r\n    const newImageUrl = await generateImage(processedText);\r\n    setImageUrl(newImageUrl);\r\n  };\r\n\r\n  /**\r\n   * Обрабатывает публикацию в Telegram\r\n   * @param {string} finalText - Финальный текст для публикации\r\n   */\r\n  const handlePublishToTelegram = (finalText) => {\r\n    // Здесь будет логика публикации в Telegram\r\n    console.log('Публикация в Telegram:', finalText);\r\n  };\r\n\r\n  if (newsLoading || aiLoading) return <div className=\"news-processing__loading\">Загрузка...</div>;\r\n  if (newsError || aiError) return <div className=\"news-processing__error\">Произошла ошибка при загрузке данных</div>;\r\n\r\n  return (\r\n    <div className=\"news-processing\">\r\n      <h1 className=\"news-processing__title\">Обработка новости</h1>\r\n      {newsDetail && (\r\n        <>\r\n          <div className=\"news-processing__original\">\r\n            <h2>Оригинальная новость</h2>\r\n            <h3>{newsDetail.title}</h3>\r\n            <p>{newsDetail.content}</p>\r\n          </div>\r\n          <div className=\"news-processing__ai-result\">\r\n            <h2>Результат обработки ИИ</h2>\r\n            <p>{processedText}</p>\r\n          </div>\r\n          <AIChat newsId={id} />\r\n          <ImagePreview \r\n            imageUrl={imageUrl} \r\n            onRegenerate={handleRegenerateImage}\r\n            onUse={() => {/* Логика использования изображения */}}\r\n          />\r\n          <TelegramPreview \r\n            initialText={processedText} \r\n            image={imageUrl}\r\n            onPublish={handlePublishToTelegram}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsProcessing;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}