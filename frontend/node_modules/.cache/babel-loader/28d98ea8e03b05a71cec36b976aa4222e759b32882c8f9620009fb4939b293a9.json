{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport api from '../services/api';\n\n/**\r\n * Хук useAI\r\n * \r\n * Этот хук предоставляет функциональность для взаимодействия с ИИ-сервисами.\r\n * \r\n * Взаимодействует с:\r\n * - api.js для выполнения запросов к бэкенду\r\n * - Компонентами, которым требуется функциональность ИИ (например, AIChat, NewsProcessing)\r\n * \r\n * Предоставляет:\r\n * - Состояние результата обработки ИИ\r\n * - Состояние загрузки\r\n * - Состояние ошибки\r\n * - Функцию для обработки новостей с помощью ИИ\r\n * - Функцию для генерации изображений\r\n */\nconst useAI = () => {\n  _s();\n  const [aiResult, setAIResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Функция для обработки новостей с помощью ИИ\n  const processNews = useCallback(async newsContent => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.processNewsWithAI(newsContent);\n      setAIResult(response.data);\n      return response.data;\n    } catch (err) {\n      setError('Ошибка при обработке новости с помощью ИИ');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Функция для генерации изображений с помощью ИИ\n  const generateImage = useCallback(async prompt => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await api.generateImageWithAI(prompt);\n      return response.data.imageUrl;\n    } catch (err) {\n      setError('Ошибка при генерации изображения');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  return {\n    aiResult,\n    loading,\n    error,\n    processNews,\n    generateImage\n  };\n};\n_s(useAI, \"YVDYajcaNFQnfBOjcQnlV8xC5Ao=\");\nexport { useAI };","map":{"version":3,"names":["useState","useCallback","api","useAI","_s","aiResult","setAIResult","loading","setLoading","error","setError","processNews","newsContent","response","processNewsWithAI","data","err","console","generateImage","prompt","generateImageWithAI","imageUrl"],"sources":["D:/project-root/frontend/src/hooks/useAI.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\nimport api from '../services/api';\r\n\r\n/**\r\n * Хук useAI\r\n * \r\n * Этот хук предоставляет функциональность для взаимодействия с ИИ-сервисами.\r\n * \r\n * Взаимодействует с:\r\n * - api.js для выполнения запросов к бэкенду\r\n * - Компонентами, которым требуется функциональность ИИ (например, AIChat, NewsProcessing)\r\n * \r\n * Предоставляет:\r\n * - Состояние результата обработки ИИ\r\n * - Состояние загрузки\r\n * - Состояние ошибки\r\n * - Функцию для обработки новостей с помощью ИИ\r\n * - Функцию для генерации изображений\r\n */\r\nconst useAI = () => {\r\n  const [aiResult, setAIResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Функция для обработки новостей с помощью ИИ\r\n  const processNews = useCallback(async (newsContent) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.processNewsWithAI(newsContent);\r\n      setAIResult(response.data);\r\n      return response.data;\r\n    } catch (err) {\r\n      setError('Ошибка при обработке новости с помощью ИИ');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Функция для генерации изображений с помощью ИИ\r\n  const generateImage = useCallback(async (prompt) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.generateImageWithAI(prompt);\r\n      return response.data.imageUrl;\r\n    } catch (err) {\r\n      setError('Ошибка при генерации изображения');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  return { aiResult, loading, error, processNews, generateImage };\r\n};\r\nexport { useAI };"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,OAAOC,GAAG,MAAM,iBAAiB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMW,WAAW,GAAGV,WAAW,CAAC,MAAOW,WAAW,IAAK;IACrDJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMX,GAAG,CAACY,iBAAiB,CAACF,WAAW,CAAC;MACzDN,WAAW,CAACO,QAAQ,CAACE,IAAI,CAAC;MAC1B,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZN,QAAQ,CAAC,2CAA2C,CAAC;MACrDO,OAAO,CAACR,KAAK,CAACO,GAAG,CAAC;IACpB,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,aAAa,GAAGjB,WAAW,CAAC,MAAOkB,MAAM,IAAK;IAClDX,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMX,GAAG,CAACkB,mBAAmB,CAACD,MAAM,CAAC;MACtD,OAAON,QAAQ,CAACE,IAAI,CAACM,QAAQ;IAC/B,CAAC,CAAC,OAAOL,GAAG,EAAE;MACZN,QAAQ,CAAC,kCAAkC,CAAC;MAC5CO,OAAO,CAACR,KAAK,CAACO,GAAG,CAAC;IACpB,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEH,QAAQ;IAAEE,OAAO;IAAEE,KAAK;IAAEE,WAAW;IAAEO;EAAc,CAAC;AACjE,CAAC;AAACd,EAAA,CArCID,KAAK;AAsCX,SAASA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}